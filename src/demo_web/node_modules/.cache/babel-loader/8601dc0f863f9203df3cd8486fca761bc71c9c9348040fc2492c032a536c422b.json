{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport io from 'socket.io-client';\nconst socket = io('http://localhost:9000'); // 소켓 연결\n\nconst App = () => {\n  _s();\n  // const [data, setData] = useState([]);\n  // const [chartData, setChartData] = useState({});\n\n  // 버튼 클릭 핸들러 - 서버로 데이터 요청\n  // const fetchData = () => {\n  //   socket.emit('getData'); // 서버에 데이터 요청 이벤트 전송\n  // };\n\n  useEffect(() => {\n    socket.connect(() => {\n      console.log(\" << SERVER CONNECT >>\");\n    });\n    socket.on(\"error\", error => {\n      console.error(error);\n    });\n    socket.on('Vehicle_Info_Web', receivedData => {\n      console.log(receivedData);\n      // setData(receivedData);\n\n      // const chart = {\n      //   labels: receivedData.map((item, index) => index + 1),\n      //   datasets: [\n      //     {\n      //       label: 'Data',\n      //       data: receivedData.map((item) => item.value),\n      //       fill: false,\n      //       borderColor: 'rgb(75, 192, 192)',\n      //       tension: 0.1,\n      //     },\n      //   ],\n      // };\n      // setChartData(chart);\n    });\n  }, []);\n\n  // 서버로부터 데이터 수신\n\n  // return (\n  //   <div>\n  //     <button onClick={fetchData}>데이터 가져오기</button>\n  //     <div>\n  //       {chartData && <Line data={chartData} />}\n  //     </div>\n  //   </div>\n  // );\n};\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Line","io","socket","App","_s","connect","console","log","on","error","receivedData","_c","$RefreshReg$"],"sources":["/home/junung/git/2023Graduation/src/web/src/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:9000'); // 소켓 연결\n\nconst App = () => {\n  // const [data, setData] = useState([]);\n  // const [chartData, setChartData] = useState({});\n\n  // 버튼 클릭 핸들러 - 서버로 데이터 요청\n  // const fetchData = () => {\n  //   socket.emit('getData'); // 서버에 데이터 요청 이벤트 전송\n  // };\n\n  useEffect(() => {\n    socket.connect(() => {\n      console.log(\" << SERVER CONNECT >>\");\n    });\n\n    socket.on(\"error\", (error) =>{\n      console.error(error);\n    })\n    socket.on('Vehicle_Info_Web', (receivedData) => {\n      console.log(receivedData);\n      // setData(receivedData);\n  \n      // const chart = {\n      //   labels: receivedData.map((item, index) => index + 1),\n      //   datasets: [\n      //     {\n      //       label: 'Data',\n      //       data: receivedData.map((item) => item.value),\n      //       fill: false,\n      //       borderColor: 'rgb(75, 192, 192)',\n      //       tension: 0.1,\n      //     },\n      //   ],\n      // };\n      // setChartData(chart);\n    });\n  }, []);\n\n  // 서버로부터 데이터 수신\n\n  // return (\n  //   <div>\n  //     <button onClick={fetchData}>데이터 가져오기</button>\n  //     <div>\n  //       {chartData && <Line data={chartData} />}\n  //     </div>\n  //   </div>\n  // );\n};\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,EAAE,MAAM,kBAAkB;AAEjC,MAAMC,MAAM,GAAGD,EAAE,CAAC,uBAAuB,CAAC,CAAC,CAAC;;AAE5C,MAAME,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA;;EAEA;EACA;EACA;EACA;;EAEAL,SAAS,CAAC,MAAM;IACdG,MAAM,CAACG,OAAO,CAAC,MAAM;MACnBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACtC,CAAC,CAAC;IAEFL,MAAM,CAACM,EAAE,CAAC,OAAO,EAAGC,KAAK,IAAI;MAC3BH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;IACFP,MAAM,CAACM,EAAE,CAAC,kBAAkB,EAAGE,YAAY,IAAK;MAC9CJ,OAAO,CAACC,GAAG,CAACG,YAAY,CAAC;MACzB;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;AAACN,EAAA,CA/CID,GAAG;AAAAQ,EAAA,GAAHR,GAAG;AAiDT,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}