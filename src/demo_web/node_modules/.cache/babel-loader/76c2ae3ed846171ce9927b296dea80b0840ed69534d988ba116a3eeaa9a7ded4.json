{"ast":null,"code":"var _jsxFileName = \"/home/junung/git/2023Graduation/src/web/src/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3000'); // 소켓 연결\n\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [chartData, setChartData] = useState({});\n\n  // 버튼 클릭 핸들러 - 서버로 데이터 요청\n  const fetchData = () => {\n    // \n    socket.emit('getData'); // 서버에 데이터 요청 이벤트 전송\n  };\n  useEffect(() => {\n    socket.connect(() => {\n      console.log(\" << SERVER CONNECT >>\");\n    });\n\n    // socket.on('Vehicle_Info_Web', (receivedData) => {\n    //   console.log(receivedData);\n    //   // setData(receivedData);\n\n    //   // const chart = {\n    //   //   labels: receivedData.map((item, index) => index + 1),\n    //   //   datasets: [\n    //   //     {\n    //   //       label: 'Data',\n    //   //       data: receivedData.map((item) => item.value),\n    //   //       fill: false,\n    //   //       borderColor: 'rgb(75, 192, 192)',\n    //   //       tension: 0.1,\n    //   //     },\n    //   //   ],\n    //   // };\n    //   // setChartData(chart);\n    // });\n  });\n\n  // 서버로부터 데이터 수신\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchData,\n      children: \"\\uB370\\uC774\\uD130 \\uAC00\\uC838\\uC624\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: chartData && /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"7bnCD+tZPJCGzctX2dvBrHQ3sBg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Line","io","jsxDEV","_jsxDEV","socket","App","_s","data","setData","chartData","setChartData","fetchData","emit","connect","console","log","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/junung/git/2023Graduation/src/web/src/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:3000'); // 소켓 연결\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [chartData, setChartData] = useState({});\n\n  // 버튼 클릭 핸들러 - 서버로 데이터 요청\n  const fetchData = () => {\n    // \n    socket.emit('getData'); // 서버에 데이터 요청 이벤트 전송\n  };\n\n  useEffect(() => {\n    socket.connect(() => {\n      console.log(\" << SERVER CONNECT >>\");\n    })\n\n    // socket.on('Vehicle_Info_Web', (receivedData) => {\n    //   console.log(receivedData);\n    //   // setData(receivedData);\n  \n    //   // const chart = {\n    //   //   labels: receivedData.map((item, index) => index + 1),\n    //   //   datasets: [\n    //   //     {\n    //   //       label: 'Data',\n    //   //       data: receivedData.map((item) => item.value),\n    //   //       fill: false,\n    //   //       borderColor: 'rgb(75, 192, 192)',\n    //   //       tension: 0.1,\n    //   //     },\n    //   //   ],\n    //   // };\n    //   // setChartData(chart);\n    // });\n  });\n\n  // 서버로부터 데이터 수신\n\n  return (\n    <div>\n      <button onClick={fetchData}>데이터 가져오기</button>\n      <div>\n        {chartData && <Line data={chartData} />}\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,CAAC,CAAC,CAAC;;AAE5C,MAAMI,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE9C;EACA,MAAMa,SAAS,GAAGA,CAAA,KAAM;IACtB;IACAP,MAAM,CAACQ,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;EAC1B,CAAC;EAEDb,SAAS,CAAC,MAAM;IACdK,MAAM,CAACS,OAAO,CAAC,MAAM;MACnBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACtC,CAAC,CAAC;;IAEF;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF,CAAC,CAAC;;EAEF;;EAEA,oBACEZ,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAQc,OAAO,EAAEN,SAAU;MAAAK,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7ClB,OAAA;MAAAa,QAAA,EACGP,SAAS,iBAAIN,OAAA,CAACH,IAAI;QAACO,IAAI,EAAEE;MAAU;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CA7CID,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AA+CT,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}