{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport io from 'socket.io-client';\nconst socket = io('http://localhost:3000'); // 소켓 연결\n\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [chartData, setChartData] = useState({});\n\n  // 버튼 클릭 핸들러 - 서버로 데이터 요청\n  const fetchData = () => {\n    socket.emit('getData'); // 서버에 데이터 요청 이벤트 전송\n  };\n  useEffect(() => {\n    socket.connect(() => {\n      console.log(\" << SERVER CONNECT >>\");\n    });\n    socket.on('Vehicle_Info_Web', receivedData => {\n      console.log(receivedData);\n      setData(receivedData);\n      const chart = {\n        labels: receivedData.map((item, index) => index + 1),\n        datasets: [{\n          label: 'Data',\n          data: receivedData.map(item => item.value),\n          fill: false,\n          borderColor: 'rgb(75, 192, 192)',\n          tension: 0.1\n        }]\n      };\n      setChartData(chart);\n    });\n  });\n\n  // 서버로부터 데이터 수신\n\n  // return (\n  //   <div>\n  //     <button onClick={fetchData}>데이터 가져오기</button>\n  //     <div>\n  //       {chartData && <Line data={chartData} />}\n  //     </div>\n  //   </div>\n  // );\n};\n_s(App, \"7bnCD+tZPJCGzctX2dvBrHQ3sBg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Line","io","socket","App","_s","data","setData","chartData","setChartData","fetchData","emit","connect","console","log","on","receivedData","chart","labels","map","item","index","datasets","label","value","fill","borderColor","tension","_c","$RefreshReg$"],"sources":["/home/junung/git/2023Graduation/src/web/src/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:3000'); // 소켓 연결\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [chartData, setChartData] = useState({});\n\n  // 버튼 클릭 핸들러 - 서버로 데이터 요청\n  const fetchData = () => {\n    socket.emit('getData'); // 서버에 데이터 요청 이벤트 전송\n  };\n\n  useEffect(() => {\n    socket.connect(() => {\n      console.log(\" << SERVER CONNECT >>\");\n    })\n\n    socket.on('Vehicle_Info_Web', (receivedData) => {\n      console.log(receivedData);\n      setData(receivedData);\n  \n      const chart = {\n        labels: receivedData.map((item, index) => index + 1),\n        datasets: [\n          {\n            label: 'Data',\n            data: receivedData.map((item) => item.value),\n            fill: false,\n            borderColor: 'rgb(75, 192, 192)',\n            tension: 0.1,\n          },\n        ],\n      };\n      setChartData(chart);\n    });\n  });\n\n  // 서버로부터 데이터 수신\n\n  // return (\n  //   <div>\n  //     <button onClick={fetchData}>데이터 가져오기</button>\n  //     <div>\n  //       {chartData && <Line data={chartData} />}\n  //     </div>\n  //   </div>\n  // );\n};\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,EAAE,MAAM,kBAAkB;AAEjC,MAAMC,MAAM,GAAGD,EAAE,CAAC,uBAAuB,CAAC,CAAC,CAAC;;AAE5C,MAAME,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE9C;EACA,MAAMW,SAAS,GAAGA,CAAA,KAAM;IACtBP,MAAM,CAACQ,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;EAC1B,CAAC;EAEDX,SAAS,CAAC,MAAM;IACdG,MAAM,CAACS,OAAO,CAAC,MAAM;MACnBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACtC,CAAC,CAAC;IAEFX,MAAM,CAACY,EAAE,CAAC,kBAAkB,EAAGC,YAAY,IAAK;MAC9CH,OAAO,CAACC,GAAG,CAACE,YAAY,CAAC;MACzBT,OAAO,CAACS,YAAY,CAAC;MAErB,MAAMC,KAAK,GAAG;QACZC,MAAM,EAAEF,YAAY,CAACG,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAKA,KAAK,GAAG,CAAC,CAAC;QACpDC,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,MAAM;UACbjB,IAAI,EAAEU,YAAY,CAACG,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACI,KAAK,CAAC;UAC5CC,IAAI,EAAE,KAAK;UACXC,WAAW,EAAE,mBAAmB;UAChCC,OAAO,EAAE;QACX,CAAC;MAEL,CAAC;MACDlB,YAAY,CAACQ,KAAK,CAAC;IACrB,CAAC,CAAC;EACJ,CAAC,CAAC;;EAEF;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;AAACZ,EAAA,CA5CID,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AA8CT,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}